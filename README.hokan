              hokan サブルーチンに関するドキュメント

        京都大学工学部附属高度情報開発実験施設 上林研究室
                            国島 丈生

                            1992.10.26



1. はじめに
hokan サブルーチンでは、members ファイルから得られる情報のみを用
いてアドレスの推測を行っています。したがって、若干おかしな結果が
得られることもある（注１）のですが、たかがＭＬのサービス一つを実
現するために、ＭＬ管理者の手間を増やすのは良くないと考え、あえて
こういう方針をとっています。



2. hokan サブルーチンにおけるヒューリスティックの概略
hokan サブルーチンにおけるアドレス推測の戦略は以下の通りです。

(1) members ファイルの中から、第１引数と同じＩＤ部を持つアドレス
をすべて選び出す。

(2-1) (1) の結果が一つだけであった場合、
  I.  membersの各エントリのドメイン部のうち、第１引数のドメイン部
    を先頭から完全に包含するものを選び、第１引数のドメイン部をそ
    れに置き換えたアドレスを生成する。
  II. I. の結果と (1) の結果が一致した場合、および I. の結果が空
    であった場合には (1) の結果を返す。そうでない場合には I. の結
    果を返す。（注２）

(2-2) (1) の結果が２つ以上あった場合
  結果の各アドレスについて、そのドメイン部と第１引数のドメイン部
とを比較し、もっとも長い文字列がマッチしたものを返す。ただし、
generic スタイルのメールアドレス（注３）のことを考慮してマッチン
グを行っている。つまり、ドメイン部と第１引数のドメイン部とがマッ
チしなかった場合は、第１引数の一つ上の上位ドメインをマッチングの
対象にする。例えば、第１引数が

imel1.kui

である場合にマッチしなかったら、その上位ドメイン

kui

でマッチングを行う。第１引数が空になるかマッチングが成功するまで
この操作を行っている。いずれのアドレスもマッチングしなかった場合、
第１引数をそのまま返す。

(2-3) (1) の結果がなかった場合
　(2-1) I. と同じヒューリスティックによってアドレスを生成する。I. 
の結果が空であった場合は第１引数をそのまま返す。



3. hokan サブルーチンの使い方
　このルーチンを使う前に、sap プログラムにある

# Initialize for 'hokan' subroutine
...
# End of Initialize

に相当する処理を行って下さい。その後に、補間したい文字列を第１引
数にとって

do hokan("hogege@imel1.k");

という感じで使って下さい。



4. hokan サブルーチンの問題点
現在 hokan サブルーチンのボトルネックは途中の grep 文です。ここを
grep を使わずに書き換えられれば、処理時間は５秒以内になると睨んで
いるのですが、今のところいい方法が見つかっていません。

その他、（注１）に挙げたような誤った判定を行ってしまいます。(間違
いではないのですが、気を効かせすぎるというか)

***********************

（注１） 現在分かっている変な動作は、
・同一組織内に２人以上のメンバーがいたことがあって、
・メンバーのうち誰かが組織内でアドレス変更をした
場合に発生します。例えば、

s_suzuki@rcom.sumiden.co.jp
nishima@rcom.sumiden.co.jp   ->  nishima@rrad.sumiden.co.jp

という場合、nishima@rcom.sum は nishima@rrad.sumiden.co.jp と解釈
して欲しいのですが、現在は nishima@rcom.sumiden.co.jp と解釈して
しまいます。これは s_suzuki@rcom.sumiden.co.jp のドメイン部の情報
を用いて rcom.sum を補間しているためです。まあ、間違いではないの
で、今のところはほったらかしています。

（注２） この戦略をとっている理由は
・同一ＩＤを持つメンバーが２人以上いたことがあって、
・その後いずれかの人のＩＤが変更された
場合に出来るだけ正しく補間を行うために行っています。例えば、

tanabe@isl.mei.co.jp  -> takumi@isl.mei.co.jp
tanabe@roland.co.jp

の場合、ＩＤ名だけで判定を行うと tanabe@isl.mei.  はすべて
tanabe@roland.co.jp とされてしまいます。所属組織が変更されずＩＤ
だけが変更になった場合に、こういう誤った解釈を防ぐために、この戦
略をとっているわけです。

（注３） 例えば、

kunishi さんがホスト flute.imel1.kuis.kyoto-u.ac.jp からメールを
発信した時に、

kunishi@imel1.kuis.kyoto-u.ac.jp

というように、最下位レベルのドメインを隠すようなアドレスを From 
行につけることをいいます。隠すドメインのレベルは sendmail.cf の書
き方次第でいくつでも出来ますが、mailconf6.4J では１レベルのみ隠す
機能を用意しています。ですから、普通は１レベルの場合のみ考慮すれ
ば充分でしょう。
